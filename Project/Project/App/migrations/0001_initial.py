# Generated by Django 3.2.12 on 2022-02-05 07:16

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Imagetbl',
            fields=[
                ('imageid', models.IntegerField(db_column='imageID', primary_key=True, serialize=False)),
                ('imagename', models.CharField(blank=True, db_column='imageName', max_length=45, null=True)),
                ('imagepath', models.CharField(blank=True, db_column='imagePath', max_length=255, null=True)),
            ],
            options={
                'db_table': 'imageTBL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ingredienttbl',
            fields=[
                ('ingrecode', models.IntegerField(db_column='ingreCode', primary_key=True, serialize=False)),
                ('ingrename', models.CharField(db_column='ingreName', max_length=20)),
                ('ingretype', models.CharField(db_column='ingreType', max_length=10)),
            ],
            options={
                'db_table': 'ingredientTBL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Listtbl',
            fields=[
                ('listid', models.IntegerField(db_column='listID', primary_key=True, serialize=False)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('unit', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'listTBL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recipeingredienttbl',
            fields=[
                ('recingid', models.IntegerField(db_column='recIngID', primary_key=True, serialize=False)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('recipetype', models.CharField(blank=True, db_column='recipeType', max_length=3, null=True)),
                ('unit', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'recipeingredientTBL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recipetbl',
            fields=[
                ('recipeid', models.IntegerField(db_column='recipeID', primary_key=True, serialize=False)),
                ('recipename', models.CharField(db_column='recipeName', max_length=20)),
                ('recipedetail', models.TextField(db_column='recipeDetail')),
                ('recipetype', models.CharField(db_column='recipeType', max_length=5)),
            ],
            options={
                'db_table': 'recipeTBL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userrecipetbl',
            fields=[
                ('userrecipeid', models.IntegerField(db_column='userRecipeID', primary_key=True, serialize=False)),
                ('recipename', models.CharField(db_column='recipeName', max_length=45)),
                ('recipedetail', models.TextField(db_column='recipeDetail')),
                ('recipetype', models.CharField(blank=True, db_column='recipeType', max_length=5, null=True)),
            ],
            options={
                'db_table': 'userRecipeTBL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usertbl',
            fields=[
                ('userid', models.IntegerField(db_column='userID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='userName', max_length=10)),
                ('useremail', models.CharField(db_column='userEmail', max_length=45)),
                ('userpassword', models.CharField(db_column='userPassword', max_length=20)),
            ],
            options={
                'db_table': 'userTBL',
                'managed': False,
            },
        ),
    ]
